console.log(1);

const a = new Promise((resolve, reject) =>
  resolve(console.log(2))
);

a.then((res) => console.log(3));

setTimeout(() => {
  console.log(4);
}, 0);

console.log(5);

// Вопрос: В каком порядке выведутся числа?

/*
Ответ: 1, 2, 5, 3, 4

Больше задач и теории: https://habr.com/ru/companies/otus/articles/686670/

Блоки синхронного кода всегда выполняются последовательно сверху вниз.
(как во всех др. языках программирования)
Когда мы вызываем new Promise(callback), функция коллбэка будет выполнена сразу же.

Интерпретатор JavaScript всегда сначала выполняет синхронный код, а затем асинхронный.

Метод resolve не прерывает выполнение функции. 
Код, стоящий за ним, по-прежнему будет выполняться.
(то есть если бы за resolve стоял console.log() то он бы выполнился сразу же, как и вся ф-ция)

Если resolve никогда не вызывается, то промис остаётся неудовлетворённым (pending)
Что значит, и функция then (если где-то после будет вызываться) не будет выполняться.

TODO: разобрать больше задач с Promise
*/
